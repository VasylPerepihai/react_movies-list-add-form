{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","expression","NewMovie","state","error","requiredFields","urlFields","handleSubmit","event","preventDefault","props","onAdd","setState","handleChange","target","name","value","updateErrorStatus","item","handleBlur","includes","length","regex","RegExp","match","items","Object","keys","this","onSubmit","type","placeholder","onChange","onBlur","disabled","Boolean","find","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.544101d0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\n\nimport './NewMovie.scss';\n\nconst expression = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype Errors = {\n  [field: keyof Movie]: boolean\n};\n\ntype State = {\n  movie: Movie,\n  error: Errors,\n  requiredFields: string[],\n  urlFields: string[],\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    error: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    requiredFields: ['title', 'imgUrl', 'imdbUrl', 'imdbId'],\n    urlFields: ['imgUrl', 'imdbUrl'],\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state.movie);\n\n    this.setState(state => ({\n      ...state,\n      movie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    }));\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      movie: {\n        ...state.movie,\n        [name]: value,\n      },\n      error: {\n        ...state.error,\n        [name]: false,\n      },\n    }));\n  };\n\n  updateErrorStatus = (item: string) => {\n    this.setState(state => ({\n      ...state,\n      error: {\n        ...state.error,\n        [item]: true,\n      },\n    }));\n  };\n\n  handleBlur = (event:React.FocusEvent<HTMLInputElement>) => {\n    const item = event.target.name;\n\n    if (this.state.requiredFields.includes(item)) {\n      if (this.state.movie[item].length === 0) {\n        this.updateErrorStatus(item);\n      }\n    }\n\n    if (this.state.urlFields.includes(item)) {\n      const regex = new RegExp(expression);\n\n      if (!this.state.movie[item].match(regex)) {\n        this.updateErrorStatus(item);\n      }\n    }\n  };\n\n  render() {\n    const items = Object.keys(this.state.movie);\n\n    const checkFormValidation = () => {\n      return this.state.requiredFields.find(item => this.state.error[item]);\n    };\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        {items.map(item => (\n          <div key={item}>\n            <input\n              type=\"text\"\n              className={this.state.error[item] ? 'field-with-error' : ''}\n              name={item}\n              value={this.state.movie[item]}\n              placeholder={item}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n            />\n            <p className=\"form-error-message\">\n              {this.state.error[item] && 'failed field validation'}\n            </p>\n          </div>\n        ))}\n        <button\n          type=\"submit\"\n          disabled={Boolean(checkFormValidation())}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}